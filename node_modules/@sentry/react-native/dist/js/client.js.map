{"version":3,"file":"client.js","sourceRoot":"","sources":["../../src/js/client.ts"],"names":[],"mappings":"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","sourcesContent":["import { BrowserClient, defaultStackParser, makeFetchTransport } from '@sentry/browser';\nimport { BrowserTransportOptions } from '@sentry/browser/types/transports/types';\nimport { FetchImpl } from '@sentry/browser/types/transports/utils';\nimport { BaseClient } from '@sentry/core';\nimport {\n  ClientReportEnvelope,\n  ClientReportItem,\n  Envelope,\n  Event,\n  EventHint,\n  Outcome,\n  SeverityLevel,\n  Transport,\n  UserFeedback,\n} from '@sentry/types';\nimport { dateTimestampInSeconds, logger, SentryError } from '@sentry/utils';\n// @ts-ignore LogBox introduced in RN 0.63\nimport { Alert, LogBox, YellowBox } from 'react-native';\n\nimport { defaultSdkInfo } from './integrations/sdkinfo';\nimport { ReactNativeClientOptions } from './options';\nimport { NativeTransport } from './transports/native';\nimport { createUserFeedbackEnvelope, items } from './utils/envelope';\nimport { mergeOutcomes } from './utils/outcome';\nimport { NATIVE } from './wrapper';\n\n/**\n * The Sentry React Native SDK Client.\n *\n * @see ReactNativeClientOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class ReactNativeClient extends BaseClient<ReactNativeClientOptions> {\n\n  private _outcomesBuffer: Outcome[];\n\n  private readonly _browserClient: BrowserClient;\n\n  /**\n   * Creates a new React Native SDK instance.\n   * @param options Configuration options for this SDK.\n   */\n   public constructor(options: ReactNativeClientOptions) {\n     if (!options.transport) {\n       options.transport = (options: BrowserTransportOptions, nativeFetch?: FetchImpl): Transport => {\n         if (NATIVE.isNativeTransportAvailable()) {\n           return new NativeTransport();\n         }\n         return makeFetchTransport(options, nativeFetch);\n       };\n     }\n     options._metadata = options._metadata || {};\n     options._metadata.sdk = options._metadata.sdk || defaultSdkInfo;\n     super(options);\n\n      this._outcomesBuffer = [];\n\n    // This is a workaround for now using fetch on RN, this is a known issue in react-native and only generates a warning\n    // YellowBox deprecated and replaced with with LogBox in RN 0.63\n    if (LogBox) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      LogBox.ignoreLogs(['Require cycle:']);\n    } else {\n      // eslint-disable-next-line deprecation/deprecation\n      YellowBox.ignoreWarnings(['Require cycle:']);\n    }\n\n    this._browserClient = new BrowserClient({\n      dsn: options.dsn,\n      transport: options.transport,\n      transportOptions: options.transportOptions,\n      stackParser: options.stackParser || defaultStackParser,\n      integrations: [],\n      _metadata: options._metadata,\n      attachStacktrace: options.attachStacktrace,\n    });\n\n     void this._initNativeSdk();\n   }\n\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(_exception: unknown, _hint?: EventHint): PromiseLike<Event> {\n    return this._browserClient.eventFromException(_exception, _hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(_message: string, _level?: SeverityLevel, _hint?: EventHint): PromiseLike<Event> {\n    return this._browserClient.eventFromMessage(_message, _level, _hint);\n  }\n\n  /**\n   * If native client is available it will trigger a native crash.\n   * Use this only for testing purposes.\n   */\n  public nativeCrash(): void {\n    NATIVE.nativeCrash();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(): PromiseLike<boolean> {\n    // As super.close() flushes queued events, we wait for that to finish before closing the native SDK.\n    return super.close().then((result: boolean) => {\n      return NATIVE.closeNativeSdk().then(() => result) as PromiseLike<boolean>;\n    });\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   */\n  public captureUserFeedback(feedback: UserFeedback): void {\n    const envelope = createUserFeedbackEnvelope(\n      feedback,\n      {\n        metadata: this._options._metadata,\n        dsn: this.getDsn(),\n        tunnel: this._options.tunnel,\n      },\n    );\n    this._sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritdoc\n   */\n  protected _sendEnvelope(envelope: Envelope): void {\n    const outcomes = this._clearOutcomes();\n    this._outcomesBuffer = mergeOutcomes(this._outcomesBuffer, outcomes);\n\n    if (this._options.sendClientReports) {\n      this._attachClientReportTo(this._outcomesBuffer, envelope as ClientReportEnvelope);\n    }\n\n    let shouldClearOutcomesBuffer = true;\n    if (this._transport && this._dsn) {\n      this._transport.send(envelope)\n        .then(null, reason => {\n          if (reason instanceof SentryError) { // SentryError is thrown by SyncPromise\n            shouldClearOutcomesBuffer = false;\n            // If this is called asynchronously we want the _outcomesBuffer to be cleared\n            logger.error('SentryError while sending event, keeping outcomes buffer:', reason);\n          } else {\n            logger.error('Error while sending event:', reason);\n          }\n        });\n    } else {\n      logger.error('Transport disabled');\n    }\n\n    if (shouldClearOutcomesBuffer) {\n      this._outcomesBuffer = []; // if send fails synchronously the _outcomesBuffer will stay intact\n    }\n  }\n\n  /**\n   * Starts native client with dsn and options\n   */\n  private async _initNativeSdk(): Promise<void> {\n    let didCallNativeInit = false;\n\n    try {\n      didCallNativeInit = await NATIVE.initNativeSdk(this._options);\n    } catch (_) {\n      this._showCannotConnectDialog();\n    } finally {\n      try {\n        this._options.onReady?.({ didCallNativeInit });\n      } catch (error) {\n        logger.error('The OnReady callback threw an error: ', error);\n      }\n    }\n  }\n\n  /**\n   * If the user is in development mode, and the native nagger is enabled then it will show an alert.\n   */\n  private _showCannotConnectDialog(): void {\n    if (__DEV__ && this._options.enableNativeNagger) {\n      Alert.alert(\n        'Sentry',\n        'Warning, could not connect to Sentry native SDK.\\nIf you do not want to use the native component please pass `enableNative: false` in the options.\\nVisit: https://docs.sentry.io/platforms/react-native/#linking for more details.'\n      );\n    }\n  }\n\n  /**\n   * Attaches a client report from outcomes to the envelope.\n   */\n  private _attachClientReportTo(outcomes: Outcome[], envelope: ClientReportEnvelope): void {\n    if (outcomes.length > 0) {\n      const clientReportItem: ClientReportItem = [\n        { type: 'client_report' },\n        {\n          timestamp: dateTimestampInSeconds(),\n          discarded_events: outcomes,\n        },\n      ];\n\n      envelope[items].push(clientReportItem);\n    }\n  }\n}\n"]}